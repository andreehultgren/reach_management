/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as TjansterRouteImport } from './routes/tjanster'
import { Route as OmOssRouteImport } from './routes/om-oss'
import { Route as JobbaHosOssRouteImport } from './routes/jobba-hos-oss'
import { Route as DesignSystemRouteImport } from './routes/design-system'
import { Route as AboutRouteImport } from './routes/about'
import { Route as IndexRouteImport } from './routes/index'

const TjansterRoute = TjansterRouteImport.update({
  id: '/tjanster',
  path: '/tjanster',
  getParentRoute: () => rootRouteImport,
} as any)
const OmOssRoute = OmOssRouteImport.update({
  id: '/om-oss',
  path: '/om-oss',
  getParentRoute: () => rootRouteImport,
} as any)
const JobbaHosOssRoute = JobbaHosOssRouteImport.update({
  id: '/jobba-hos-oss',
  path: '/jobba-hos-oss',
  getParentRoute: () => rootRouteImport,
} as any)
const DesignSystemRoute = DesignSystemRouteImport.update({
  id: '/design-system',
  path: '/design-system',
  getParentRoute: () => rootRouteImport,
} as any)
const AboutRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/design-system': typeof DesignSystemRoute
  '/jobba-hos-oss': typeof JobbaHosOssRoute
  '/om-oss': typeof OmOssRoute
  '/tjanster': typeof TjansterRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/design-system': typeof DesignSystemRoute
  '/jobba-hos-oss': typeof JobbaHosOssRoute
  '/om-oss': typeof OmOssRoute
  '/tjanster': typeof TjansterRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/design-system': typeof DesignSystemRoute
  '/jobba-hos-oss': typeof JobbaHosOssRoute
  '/om-oss': typeof OmOssRoute
  '/tjanster': typeof TjansterRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/design-system'
    | '/jobba-hos-oss'
    | '/om-oss'
    | '/tjanster'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/design-system'
    | '/jobba-hos-oss'
    | '/om-oss'
    | '/tjanster'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/design-system'
    | '/jobba-hos-oss'
    | '/om-oss'
    | '/tjanster'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  DesignSystemRoute: typeof DesignSystemRoute
  JobbaHosOssRoute: typeof JobbaHosOssRoute
  OmOssRoute: typeof OmOssRoute
  TjansterRoute: typeof TjansterRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/tjanster': {
      id: '/tjanster'
      path: '/tjanster'
      fullPath: '/tjanster'
      preLoaderRoute: typeof TjansterRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/om-oss': {
      id: '/om-oss'
      path: '/om-oss'
      fullPath: '/om-oss'
      preLoaderRoute: typeof OmOssRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/jobba-hos-oss': {
      id: '/jobba-hos-oss'
      path: '/jobba-hos-oss'
      fullPath: '/jobba-hos-oss'
      preLoaderRoute: typeof JobbaHosOssRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/design-system': {
      id: '/design-system'
      path: '/design-system'
      fullPath: '/design-system'
      preLoaderRoute: typeof DesignSystemRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  DesignSystemRoute: DesignSystemRoute,
  JobbaHosOssRoute: JobbaHosOssRoute,
  OmOssRoute: OmOssRoute,
  TjansterRoute: TjansterRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
